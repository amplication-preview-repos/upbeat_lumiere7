/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Subject as PrismaSubject } from "@prisma/client";

export class SubjectServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.SubjectCountArgs, "select">): Promise<number> {
    return this.prisma.subject.count(args);
  }

  async subjects(args: Prisma.SubjectFindManyArgs): Promise<PrismaSubject[]> {
    return this.prisma.subject.findMany(args);
  }
  async subject(
    args: Prisma.SubjectFindUniqueArgs
  ): Promise<PrismaSubject | null> {
    return this.prisma.subject.findUnique(args);
  }
  async createSubject(args: Prisma.SubjectCreateArgs): Promise<PrismaSubject> {
    return this.prisma.subject.create(args);
  }
  async updateSubject(args: Prisma.SubjectUpdateArgs): Promise<PrismaSubject> {
    return this.prisma.subject.update(args);
  }
  async deleteSubject(args: Prisma.SubjectDeleteArgs): Promise<PrismaSubject> {
    return this.prisma.subject.delete(args);
  }
}
